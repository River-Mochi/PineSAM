{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#_1","title":"","text":""},{"location":"#pinesam-pinecil-settings-and-menus","title":"PineSAM = Pinecil Settings and Menus","text":"<p>Why focus on soldering when you can play with the settings instead? With this app you have full control over your new shiny Pinecil V2 from your computer using bluetooth.</p> <p>NB: No special browser BLE GATT or flags required and works on all major OS/devices.</p> <p>NB: This app needs the python backend to run on a computer, it CANNOT run entirely in the browser like Joric's UI.</p>   #### Full settings view     <p></p>"},{"location":"#features","title":"\ud83d\udcab Features","text":"<ul> <li> Automatically detect Pinecil V2 over BLE.</li> <li> Control all settings on the device.</li> <li> Save to Flash: toggle to save changes directly onto Pinecil (leave off unless actively changing settings).</li> <li> Work HUD main screen with: Set \u00b0C/\u00b0F <code>[+][-]</code> buttons, live tip \u00b0C/\u00b0F updates, peak watts, live watts, input voltage.</li> <li> Preset buttons to allow quick change of user defined temperatures (PineSAM extra feature not available directly inside Pinecil).</li> <li> Backend runs locally on all major platforms/OS while the user interface runs on your favorite browser.</li> <li> Usage details in PineSAM wiki.</li> </ul>"},{"location":"#platforms","title":"Platforms","text":"System MacOS Linux Windows iOS Android UI :heavy_check_mark: :heavy_check_mark: :heavy_check_mark: :heavy_check_mark: :heavy_check_mark: backend :heavy_check_mark: :heavy_check_mark: :heavy_check_mark:"},{"location":"#desktop_computer-install-options","title":":desktop_computer: Install Options","text":""},{"location":"#i-using-pre-made-binaries","title":"I. Using pre-made binaries","text":"<ol> <li>Binary packages do not require installation of python or node.js</li> <li>Download latest release version for your specific OS (Mac, Linux, Windows).</li> <li> <p>Mac/Linux: extract and run <code>./start.sh</code> in terminal.</p> </li> <li> <p>On MacOS, http://localhost:8080/ opens in your browser automatically.</p> </li> <li>Some Linux distros may need http://localhost:8080/ opened manually.</li> <li> <p>Usage guide here.</p> </li> <li> <p>Windows: </p> </li> <li>right click on the zip, properties&gt; general, check box to Unblock, then extract (reference).</li> <li>Run powershell as admin, cd to the pinesam folder and <code>.\\start.ps1</code></li> <li>Allow any windows pop-up warnings about \"serve.exe\" and \"main_sever.exe\".</li> <li>If you get errors in powershell, set the permissions to RemoteSigned to allow scripts (reference).<ul> <li><code>C:\\&gt; Set-ExecutionPolicy RemoteSigned</code></li> </ul> </li> <li>Browser will automatically open http://localhost:8080</li> <li>Usage guide here.</li> </ol>"},{"location":"#ii-install-the-dev-version-source-all-_zip","title":"II. Install the Dev version (Source-all-_.zip)","text":"<p>This is the same PineSam as the pre-made binaries. Install this if there is an issue with the binaries. For the backend script, first install: - git - python 3 (tested with 3.10/3.11) - pipenv - node+npm</p>     ### Mac/Linux install     #### Setup Install all packages linked above first.  <pre><code>git clone https://github.com/builder555/PineSAM\ncd PineSAM\nchmod +x setup-dev.sh\nchmod +x run-dev.sh\n./setup-dev.sh\n</code></pre>  #### Run <pre><code>./run-dev.sh\n# press CTRL+C in the terminal window to stop\n</code></pre> * On a Mac http://localhost:8080 will open in your browser automatically. * Some Linux distros may need http://localhost:8080 opened manually. Debian12 hints [here](https://github.com/builder555/PineSAM/discussions/47#discussion-4884758).     ### Windows dev install     #### Install Install the packages linked above for the backend script. Skip to 4 if you did this already.  1. Python install notes     * Check \"Add python.exe to PATH\" and select \"Customize Installation\"     * Check \"Add Python to environment variables\" option     * Screenshots of options to select [are here](https://github.com/builder555/PineSAM/discussions/7#discussion-4862766). 2. Install [NodeJS here](https://nodejs.org/en/download/), accept all prompts to add packages during install including a prompt in the terminal that opens. 3. After installing packages listed for backend script ([reference](https://github.com/builder555/PineSAM/issues/131#issuecomment-1489711241)), go to System Environment variables to check paths ([image](https://github.com/builder555/PineSAM/discussions/130#discussion-5011624)). 4. Download the Source-all-__.zip from the [latest release](https://github.com/builder555/PineSAM/releases/latest). 5. If the zip has an Unblock option, then unblock and extract ([example](https://github.com/builder555/PineSAM/discussions/106#discussion-4960445)). 6. Run powershell as administrator, set permissions to RemoteSigned ([image here](https://github.com/builder555/PineSAM/discussions/106)). <pre><code># setting this one time in powershell normally persists on reboots.\nC:\\Set-ExecutionPolicy RemoteSigned\n</code></pre> #### Run 1. change directory, `cd` into the PineSAM folder that was extracted above. <pre><code>.\\setup-dev.bat   # only need to run this one time for each new version\n.\\run-dev.bat     # run this command every time to start PineSAM (do not need to run as admin)\n</code></pre>"},{"location":"#signal_strength-remote-access","title":":signal_strength: Remote access","text":"<p>You can access the settings remotely once the app is running on the main PC/laptop.</p> <ul> <li>Find the local IP address of the device running the app.</li> <li>open <code>http://&lt;ip-address&gt;:8080/</code> on the second device on the same network (e.g., a phone).</li> <li>Pinecil needs to be within BLE range of the computer running the PineSAM app.</li> </ul>"},{"location":"#known-issues","title":"\ud83d\udea7 Known issues","text":"<ol> <li> <p>bleak causes Python to crash on Mac: https://github.com/hbldh/bleak/issues/768</p> <ul> <li>possible solution: give access to iTerm (or whichever terminal you use) to Bluetooth in Settings</li> </ul> </li> <li> <p>Pinecil not detected</p> <ul> <li>possible reason: you paired your Pinecil using system settings. solution: unpair it from all other places.  </li> <li>possible reason: using older firmware (below 2.21). solution: flash current BLE firmware; below IronOS 2.21 only BETA versions will work with PineSAM.</li> </ul> </li> <li> <p>main_server script terminal crashes on start of script: incompatible version of IronOS, check/update firmware see above.</p> </li> <li> <p>Windows Powershell issue</p> <ul> <li>windows by default does not allow any scripts to run in powershell. Make sure the zip file property is Unblock (reference) and set powershell to remotesigned with: <code>set-executionpolicy remotesigned</code></li> <li>check that windows has not reset the permissions in powershell with <code>Get-ExecutionPolicy</code> and change it back to <code>RemoteSigned</code> if needed (reference).</li> </ul> </li> <li> <p>See the Discussions section for install hints and solutions to some common issues.</p> </li> <li>PineSAM usage instructions here.</li> <li>Something else: open an issue. </li> </ol>"},{"location":"#abacus-contributors-welcome","title":":abacus: Contributors Welcome","text":"<ul> <li>Please fork the repo, and submit Pull Requests using the <code>/dev</code> branch</li> </ul>"},{"location":"#running-unit-tests","title":"\ud83d\udee0\ufe0f Running Unit tests","text":"<pre><code># run inside 'backend' directory:\npipenv run test\n</code></pre>"},{"location":"#book-references","title":":book: References","text":"<ul> <li>Pinecil - The Pinecil Wiki page</li> <li>IronOS - The OS running on this soldering iron</li> <li>Pinecil Web UI - A neat web-based UI, requires bluetooth browser support</li> <li>Pinecil Authenticity Checker - almost all AliExpress Pinecils are fake, check your V2!</li> </ul>"},{"location":"how-to-use/","title":"How to use","text":""},{"location":"how-to-use/#usage","title":"Usage","text":"<ol> <li>Click on PineSAM logo to reveal the unique BLE name of your Pinecil.</li> <li>Update available notice appears under the PineSAM logo if a new release is available for download.</li> <li>PineSAM version number is next to the Github Cat in the top right of the screen.</li> <li>Clicking on the waving cat links to the main Github PineSAM repo.</li> <li>Show Hints: toggles on/off to display help messages from Pinecil and PineSAM.</li> <li>Temperature automatically adjusts based on \u00b0C or \u00b0F setting.</li> <li>Colors are designed to work in Light or Dark view mode on PC and Phone Browsers.</li> <li>Thermostat icon changes into 100 different color hues as the live temperature changes.</li> </ol>"},{"location":"how-to-use/#save-changes-to-flash","title":"Save Changes to Flash","text":"<ul> <li>In Work HUD view, leave Save to Flash OFF (not needed and preserves flash cycles).</li> <li>Toggle this on ''only'' before changing settings on the Pinecil so they persist on reboot.</li> </ul>"},{"location":"how-to-use/#steps-to-change-settings","title":"Steps to Change Settings:","text":"<ol> <li>toggle on the Save to Flash (grey is off)</li> <li>change all desired settings</li> <li>once complete, toggle it off.</li> <li>if using the Work HUD view, it is best to leave this off. No reason to constantly flash to pinecil for each temperature change (don't worry Pinecil still changes temperature, it's just not permanently flashed and set).</li> </ol>"},{"location":"how-to-use/#work-hud-view","title":"Work HUD View","text":"<ol> <li>This is a HUD window designed as an all-in-one single view that can be used during soldering.</li> <li>Phone: designed to be completely viewable on vertical screen.</li> <li>In this view one can control Set temperature with buttons +/- and view important stats, e.g., live temperature.</li> <li>Power Bar: bottom bar shows the input voltage, the current estimated watts pinecil is drawing, and the highest peak watt hit during the session.</li> <li>It is best to leave save to flash toggle Off while using the Work HUD to save on pinecil flash cycles as the PineSAM buttons are used often during a soldering session.</li> </ol>"},{"location":"how-to-use/#preset-buttons","title":"Preset buttons","text":"<ol> <li>Allows quick change of user customizable temperatures (exclusive to PineSAM and not available on Pinecil iron directly).</li> <li>Preset buttons can be customized and saved instantly to desired temperature.</li> <li>Presets are saved to the html file where the python script is running and will persist if one uses the same PC again.</li> </ol>"},{"location":"how-to-use/#steps","title":"Steps:","text":"<ol> <li>set the number desired with the PineSAM [-][+] buttons.</li> <li>then long hold the Preset 1/2 you want to save to, click OK on the confirmation box.</li> <li>it will save what is currently shown in the Set \u00b0C at the top.</li> </ol>"},{"location":"how-to-use/settings/","title":"Settings Categories","text":"<ul> <li>For familiarity, Settings are grouped in a similar way as seen on Pinecil (and as organized in Ralim's IronOS firmware).</li> <li>Categories can be clicked to collapse and reduce screen clutter.</li> <li>Setting numbers can be changed two ways: moving the slider or simply typing on the box next to the slider.</li> <li>Drop-down menus are used for clarity of text choices.</li> <li>Toggle choices are used for all check box items ballot_box_with_check seen on the pinecil (e.g. detailed idle).</li> </ul> Settings categories  Full settings view"},{"location":"how-to-use/settings/#debug-data","title":"Debug Data","text":"<ul> <li>Debug is a special category in Pinecil that is usually hidden and not used unless troubleshooting an issue.</li> <li>On Pinecil, the debug menu is accesed by Long hold [-] and then use the [+] to scroll through the values (see here).</li> <li>PineSAM currently displays the raw values as sent by the Pinecil and does no change to the values; therefore, these may not match exactly what you see on the Pinecil Debug screen.</li> <li>Not all values are available yet, e.g., PD Debug values can only be seen on Pinecil.</li> </ul>"},{"location":"how-to-use/settings/#terminal-script","title":"Terminal Script","text":"<ul> <li>a python script runs the backend server inside a terminal (e.g. powershell)</li> <li>Terminal messages contain useful information for devs and troubleshooting.</li> <li>BLE MAC address of the pinecil for example is on line \"Found pinecil at\" C4:xx:xx:xx:xx:xx</li> </ul>"}]}